--- Chunk 0 ---
Introduction to ArtiÔ¨Åcial Intelligence Marc Toussaint February 4, 2019 The majority of slides on search, CSP and logic are adapted from Stuart Russell . This is a direct concatenation and reformatting of all lecture slides and exercises from theArtiÔ¨Åcial Intelligence course (winter term 2018/19, U Stuttgart), including indexing to help prepare for exams. Double-starred** sections and slides are not relevant for the exam. Contents 1 Introduction 6 2 Search 13 Motivation & Outline 2.1 Problem Formulation & Examples . . . . . . . . . . . . . . . . . . . . 13 Example: Romania (2:3) Problem DeÔ¨Ånition: Deterministic, fully observable (2:5) 2.2 Basic Tree Search Algorithms . . . . . . . . . . . . . . . . . . . . . . . 15 Tree search implementation: states vs nodes (2:11) Tree Search: General Algorithm (2:12) Breadth-Ô¨Årst search (BFS) (2:15) Complexity of BFS (2:16) Uniform-cost search (2:17) Depth-Ô¨Årst search (DFS) (2:18) Complexity of DFS (2:19) Iterative deepening search (2:21) Complexity of Iterative Deepening Search (2:23) Graph search and re- peated states (2:25) 2.3 ASearch . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 Best-Ô¨Årst Search (2:29) Asearch (2:31) A: Proof 1 of Optimality (2:33) Complexity of A(2:34) A: Proof 2 of Optimality (2:35) Admissible heuristics (2:37) Memory- bounded A(2:40) 1 2 Introduction to ArtiÔ¨Åcial Intelligence, Marc Toussaint 3 Probabilities 31 Motivation & Outline Probabilities as (subjective) information calculus (3:2) Infer- ence: general meaning (3:5) Frequentist vs Bayesian (3:6) 3.1 Basic deÔ¨Ånitions . . . . . . . . . . . . . . . . . . .

--- Chunk 1 ---
. . . . . . . . . . . . 34 DeÔ¨Ånitions based on sets (3:8) Random variables (3:9) Probability distribution (3:10) Joint distribution (3:11) Marginal (3:11) Conditional distribution (3:11) Bayes‚Äô Theo- rem (3:13) Multiple RVs, conditional independence (3:14) 3.2 Probability distributions** . . . . . . . . . . . . . . . . . . . . . . . . . 36 Bernoulli and Binomial distributions (3:16) Beta (3:17) Multinomial (3:20) Dirichlet (3:21) Conjugate priors (3:25) 3.3 Distributions over continuous domain** . . . . . . . . . . . . . . . . . 41 Dirac distribution (3:28) Gaussian (3:29) Particle approximation of a distribution (3:33) Utilities and Decision Theory (3:36) Entropy (3:37) Kullback-Leibler diver- gence (3:38) 3.4 Monte Carlo methods** . . . . . . . . . . . . . . . . . . . . . . . . . . . 46 Monte Carlo methods (3:40) Rejection sampling (3:41) Importance sampling (3:42) Student‚Äôs t, Exponential, Laplace, Chi-squared, Gamma distributions (3:44) 4 Bandits, MCTS, & Games 48 Motivation & Outline 4.1 Bandits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48 Multi-armed Bandits (4:2) 4.2 Upper ConÔ¨Ådence Bounds (UCB) . . . . . . . . . . . . . . . . . . . . . 50 Exploration, Exploitation (4:7) Upper ConÔ¨Ådence Bound (UCB1) (4:8) 4.3 Monte Carlo Tree Search . . . . . . . . . . . . . . . . . . . . . . . . . . 52 Monte Carlo Tree

--- Chunk 2 ---
Search (MCTS) (4:14) Upper ConÔ¨Ådence Tree (UCT) (4:19) MCTS for POMDPs (4:20) 4.4 MCTS applied to POMDPs** . . . . . . . . . . . . . . . . . . . . . . . 55 4.5 Game Playing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57 Minimax (4:29) Alpha-Beta Pruning (4:32) Evaluation functions (4:37) UCT for games (4:38) 4.6 Beyond bandits** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63 Global Optimization (4:43) GP-UCB (4:46) Active Learning (4:50) 4.7 Active Learning** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66 Introduction to ArtiÔ¨Åcial Intelligence, Marc Toussaint 3 5 Dynamic Programming 69 Motivation & Outline 5.1 Markov Decision Process . . . . . . . . . . . . . . . . . . . . . . . . . . 69 Markov Decision Process (5:3) 5.2 Dynamic Programming . . . . . . . . . . . . . . . . . . . . . . . . . . 70 Value Function (5:6) Bellman optimality equation (5:10) Value Iteration (5:12) Q- Function (5:13) Q-Iteration (5:14) Proof of convergence of Q-Iteration (5:15) 5.3 Dynamic Programming in Belief Space . . . . . . . . . . . . . . . . . . 76 6 Reinforcement Learning 81 Motivation & Outline 6.1 Learning in

--- Chunk 3 ---
MDPs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84 Temporal difference (TD) (6:10) Q-learning (6:10) Proof of convergence of Q-learning (6:12) Eligibility traces (6:15) Model-based RL (6:28) 6.2 Exploration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 94 Epsilon-greedy exploration in Q-learning (6:31) R-Max (6:33) Bayesian RL (6:35) Op- timistic heuristics (6:36) 6.3 Policy Search, Imitation, & Inverse RL** . . . . . . . . . . . . . . . . . 97 Policy gradients (6:41) Imitation Learning (6:43) Inverse RL (6:46) 7 Other models of interactive domains** 104 7.1 Basic Taxonomy of domain models . . . . . . . . . . . . . . . . . . . . 104 PDDL (7:6) Noisy Deictic Rules (7:9) POMDP (7:11) Dec-POMDP (7:20) Control (7:21) 8 Constraint Satisfaction Problems 113 Motivation & Outline 8.1 Problem Formulation & Examples . . . . . . . . . . . . . . . . . . . . 113 Inference (8:2) Constraint satisfaction problems (CSPs): DeÔ¨Ånition (8:3) Map- Coloring Problem (8:4) 8.2 Methods for solving CSPs . . . . . . . . . . . . . . . . . . . . . . . . . 116 Backtracking (8:10) Variable order: Minimum remaining values (8:15) Variable or- der: Degree heuristic (8:16) Value order: Least constraining value (8:17) Constraint propagation (8:18) Tree-structured CSPs (8:25) 4 Introduction to ArtiÔ¨Åcial Intelligence, Marc Toussaint 9 Graphical Models 126 Motivation & Outline 9.1 Bayes Nets

--- Chunk 4 ---
and Conditional Independence . . . . . . . . . . . . . . . 126 Bayesian Network (9:5) Conditional independence in a Bayes Net (9:8) Inference: general meaning (9:13) 9.2 Inference Methods in Graphical Models . . . . . . . . . . . . . . . . . 133 Inference in graphical models: overview (9:22) Variable elimination (9:23) Factor graph (9:26) Belief propagation (9:32) Message passing (9:32) Loopy belief propa- gation (9:36) Junction tree algorithm** (9:38) Maximum a-posteriori (MAP) inference (9:42) Conditional random Ô¨Åeld (9:43) Monte Carlo (9:45) Rejection sampling (9:46) Importance Sampling (9:48) Gibbs Sampling (9:50) 10 Dynamic Models 147 Motivation & Outline Markov Process (10:1) Hidden Markov Model (10:2) Filtering, Smoothing, Prediction (10:3) HMM: Inference (10:4) HMM inference (10:5) Kalman Ô¨Ålter (10:8) 11 AI & Machine Learning & Neural Nets 154 Motivation & Outline Neural networks (11:8) 12 Explainable AI 165 13 Propositional Logic 173 Motivation & Outline 13.1 Syntax & Semantics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 173 Knowledge base: DeÔ¨Ånition (13:3) Wumpus World example (13:4) Logic: DeÔ¨Ånition, Syntax, Semantics (13:7) Propositional logic: Syntax (13:9) Propositional logic: Se- mantics (13:10) Logical equivalence (13:12) 13.2 Inference Methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 183 Inference (13:19) Horn Form (13:23) Modus Ponens (13:23) Forward chaining (13:24) Completeness of Forward Chaining (13:27) Backward Chaining (13:28) Conjunctive Normal Form (13:31) Resolution (13:31) Conversion to CNF (13:32) 14 First-Order Logic** 199 Motivation & Outline 14.1 The FOL language . . . . . . . . . .

--- Chunk 5 ---
. . . . . . . . . . . . . . . . . . . . 200 FOL: Syntax (14:4) Universal quantiÔ¨Åcation (14:6) Existential quantiÔ¨Åcation (14:6) 14.2 FOL Inference . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 203 Reduction to propositional inference (14:16) UniÔ¨Åcation (14:19) Generalized Modus Ponens (14:20) Forward Chaining (14:21) Backward Chaining (14:27) Conversion to CNF (14:33) Resolution (14:35) Introduction to ArtiÔ¨Åcial Intelligence, Marc Toussaint 5 15 Relational Probabilistic Modelling and Learning** 216 Motivation & Outline 15.1 STRIPS-like rules to model MDP transitions . . . . . . . . . . . . . . . 216 Markov Decision Process (MDP) (15:2) STRIPS rules (15:3) Planning Domain DeÔ¨Åni- tion Language (PDDL) (15:3) Learning probabilistic rules (15:9) Planning with prob- abilistic rules (15:11) 15.2 Relational Graphical Models . . . . . . . . . . . . . . . . . . . . . . . . 220 Probabilistic Relational Models (PRMs) (15:20) Markov Logic Networks (MLNs) (15:24) The role of uncertainty in AI (15:31) 16 Exercises 228 16.1 Exercise 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 228 16.2 Exercise 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 230 16.3 Exercise 3 . . . . . . . . . . . . . . . .

--- Chunk 6 ---
. . . . . . . . . . . . . . . . . . . 232 16.4 Exercise 4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 234 16.5 Exercise 5 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 236 16.6 Exercise 6 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 239 16.7 Exercise 7 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 241 16.8 Exercise 9 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 243 16.9 Exercise 7 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 244 Index 246 on treesCSP graphical modelsMDPssequential decision problems search BFSpropositional logicFOL relational graphical models relational MDPs Reinforcement LearningHMMs MLmulti-agent MDPsMCTS utilitiesdeterministic learningprobabilisticpropositional relationalsequential decisions games banditsUCBconstraint propagation belief propagation msg. passing Active LearningDecision Theorydynamic programming V(s), Q(s,a)fwd/bwd chainingbacktracking fwd/bwd msg. passingFOLsequential assignment alpha/beta pruning minimax 6

--- Chunk 7 ---
Introduction to ArtiÔ¨Åcial Intelligence, Marc Toussaint 1 Introduction (some slides based on Stuart Russell‚Äôs AI course) What is intelligence? Maybe it is easier to Ô¨Årst ask what systems we actually talk about: ‚Äì Decision making ‚Äì Interacting with an environment Then deÔ¨Åne objectives! ‚Äì Quantify what you consider good or successful ‚Äì Intelligence means to optimize... 1:1 Intelligence as Optimization? A cognitive scientist or psychologist: ‚ÄúWhy are you AI people always so ob- sessed with optimization? Humans are not optimal!‚Äù That‚Äôs a total misunderstanding of what ‚Äúbeing optimal‚Äù means. Optimization principles are a means to describe systems: ‚Äì Feynman‚Äôs ‚Äúunworldliness measure‚Äù objective function ‚Äì Everything can be cast optimal ‚Äì under some objective ‚Äì Optimality principles are just a scientiÔ¨Åc means of formally describing systems and their behaviors (esp. in physics, economy, ... and AI) ‚ÄìToussaint, Ritter & Brock: The Optimization Route to Robotics ‚Äì and Alternatives . K¬®unstliche Intelligenz, 2015 Generally, I would roughly distinguish three basic types of problems: ‚Äì Optimization ‚Äì Logical/categorial Inference (CSP , Ô¨Ånd feasible solutions) ‚Äì Probabilistic Inference 1:2 What are interesting objectives? Learn to control all degrees of freedom of the environment that are controllable ‚Äì DOFs are mechanical/kinematics DOFs, objects, light/temperature, mood of hu- mans ‚Äì This objective is generic: no preferences, not limits ‚Äì Implies to actively go exploring and Ô¨Ånding controllable DOFs Introduction to ArtiÔ¨Åcial Intelligence, Marc Toussaint 7 ‚Äì Acting to Learning (instead of ‚ÄôLearning to Act‚Äô for a Ô¨Åxed task) ‚Äì Related notions in other Ô¨Åelds: (Bayesian) Experimental Design ,Active Learning , cu- riosity, intrinsic motivation At timeT, the system will be given a random task (e.g., random goal conÔ¨Ågu- ration of DOFs); the objective then is to reach it as quickly as possible 1:3 More on objectives The value alignment dilemma What are objectives that describe things

--- Chunk 8 ---
like ‚Äúcreativity‚Äù, ‚Äúempathy‚Äù, etc? Coming up with objective functions that imply desired behavior is a core part of AI research 1:4 Interactive domains We assume the agent is in interaction with a domain. ‚Äì The world is in a state st2S(see below on what that means) ‚Äì The agent senses observations yt2O ‚Äì The agent decides on an action at2A ‚Äì The world transitions to a new state st+1 The observationytdescribes all information received by the agent (sensors, also rewards, feedback, etc) if not explicitly stated otherwise (The technical term for this is a POMDP) 1:5 State The notion of state is often used imprecisely At any time t, we assume the world is in a state st2S stis astate description of a domain iff future observations yt+;t+>tare condi- tionally independent of all history observations yt ;t <tgivenstand future actionsat:t+: 8 Introduction to ArtiÔ¨Åcial Intelligence, Marc Toussaint agents0 s1a0 s2a1 s3a2 a3 y0 y1 y2 y3 Notes: ‚Äì Intuitively, stdescribes everything about the world that is ‚Äúrelevant‚Äù ‚Äì Worlds do not have additional latent (hidden) variables to the state st 1:6 Examples What is a sufÔ¨Åcient deÔ¨Ånition of state of a computer that you interact with? What is a sufÔ¨Åcient deÔ¨Ånition of state for a thermostat scenario? (First, assume the ‚Äôroom‚Äô is an isolated chamber.) What is a sufÔ¨Åcient deÔ¨Ånition of state in an autonomous car case? !in real worlds, the exact state is practically not representable !all models of domains will have to make approximating assumptions (e.g., about independencies) 1:7 How can agents be formally described? ...or, what formal classes of agents do exist? Basic alternative agent models: ‚Äì The agent maps yt7!at (stimulus-response mapping.. non-optimal) ‚Äì The agent stores all previous observations and maps f:y0:t;a0:t-17!at fis called agent function . This is the most general model, including the others as

--- Chunk 9 ---
special cases. ‚Äì The agent stores only the recent history and maps yt k:t;at k:t-17!at(crude, but may be a good heuristic) Introduction to ArtiÔ¨Åcial Intelligence, Marc Toussaint 9 ‚Äì The agent is some machine with its own internal state nt, e.g., a computer, a Ô¨Ånite state machine, a brain... The agent maps (nt-1;yt)7!nt(internal state update) and nt7!at ‚Äì The agent maintains a full probability distribution ( belief )bt(st)over the state, maps (bt-1;yt)7!bt(Bayesian belief update), and bt7!at 1:8 POMDP coupled to a state machine agent agents0 s1 s2 r1 r0 r2a2 y2 a1 y1 a0 y0n0 n1 n2 1:9 Multi-agent domain models (The technical term for this is a Decentralized POMDPs) (from Kumar et al., IJCAI 2011) This is a special type (simpliÔ¨Åcation) of a general DEC-POMDP Generally, this level of description is very general, but NEXP-hard Approximate methods can yield very good results, though 1:10 Summary ‚Äì AI is about: Systems that interact with the environment 10 Introduction to ArtiÔ¨Åcial Intelligence, Marc Toussaint ‚Äì We distinguish between ‚Äôsystem‚Äô and ‚Äôenvironment‚Äô (cf. embodiment) ‚Äì We just introduced basic models of interaction ‚Äì A core part of AI research is to develop formal models for interaction Systems that aim to manipulate their invironment towards ‚Äôdesired‚Äô states (op- timality) ‚Äì Optimality principles are a standard way to describe desired behaviors ‚Äì We sketched some interesting objectives ‚Äì Coming up with objective functions that imply desired behavior is a core part of AI research 1:11 Organisation 1:12 Vorlesungen der Abteilung MLR Bachelor: ‚Äì Grundlagen der K ¬®unstlichen Intelligenz (3+1 SWS) Master: ‚Äì Vertiefungslinie Intelligente Systeme (gemeinsam mit Andres Bruhn) ‚Äì WS: Maths for Intelligent Systems ‚Äì WS: Introduction to Robotics ‚Äì SS: Machine Learning ‚Äì (SS: Optimization) ‚Äì (Reinforcement Learning), (Advanced Robotics) ‚Äì Practical Course Robotics (SS) ‚Äì (Hauptseminare: Machine Learning (WS), Robotics (SS)) 1:13 Andres

